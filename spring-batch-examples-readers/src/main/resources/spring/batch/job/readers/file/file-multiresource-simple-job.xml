<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <description>
        Real simple Spring Batch example for a basic MultiResourceItemReader with
        FlatFileItemReader as delegate.
        
        - basically reads file and writes each line out unchanged
        - input/output files are configured with stepscope and jobparameters
        - expects an input file, see http://static.springsource.org/spring-batch/apidocs/org/springframework/batch/item/file/FlatFileItemReader.html#setStrict(boolean)
        - uses http://static.springsource.org/spring-batch/apidocs/org/springframework/batch/item/file/mapping/PassThroughLineMapper.html
        
        see:
            - http://static.springsource.org/spring-batch/reference/html-single/index.html#flatFileItemReader
            - http://static.springsource.org/spring-batch/apidocs/org/springframework/batch/item/file/FlatFileItemReader.html
    </description>
    <!-- 
        inline xmlns, otherwise it would look like 'batch:job, batch:step, etc.' 
    -->
    <job id="simpleMultiResourceReaderJob" xmlns="http://www.springframework.org/schema/batch">
        <step id="simpleMultiResourceReaderStep">
            <tasklet>
                <chunk reader="itemReader" writer="itemWriter" commit-interval="5" />
            </tasklet>
        </step>
    </job>

    <bean id="itemReader" class="org.springframework.batch.item.file.MultiResourceItemReader" scope="step">
        <property name="resources" value="#{jobParameters['input.files']}" />
        <property name="delegate" ref="itemReaderDelegate" />
        <property name="strict" value="true" />
    </bean>

    <bean id="itemReaderDelegate" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.PassThroughLineMapper" />
        </property>
    </bean>
    
    <bean id="itemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
        <property name="resource" value="#{jobParameters['output.file']}" />
        <property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.PassThroughLineAggregator"/>
        </property>
    </bean>

</beans>
