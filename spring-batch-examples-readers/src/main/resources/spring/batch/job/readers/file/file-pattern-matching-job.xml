<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <description>
        Simple example using the PatternMatchingCompositeLineMapper.
    </description>
    <!-- 
        inline xmlns, otherwise it would look like 
        'batch:job, batch:step, etc.' 
    -->
    <job id="patternMatchingReaderJob" xmlns="http://www.springframework.org/schema/batch">
        <step id="patternMatchingReaderStep">
            <tasklet>
                <chunk reader="itemReader" writer="itemWriter" commit-interval="5" />
            </tasklet>
        </step>
    </job>

    <bean id="itemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="resource" value="#{jobParameters['input.file']}" />
        <property name="lineMapper" ref="patternMatchingMapper" />
        <property name="strict" value="true" />
    </bean>
    
    <bean id="patternMatchingMapper" class="org.springframework.batch.item.file.mapping.PatternMatchingCompositeLineMapper">
        <property name="tokenizers">
            <map>
                <entry key="LINEA*" value-ref="delimitedLineTokenizer" />
                <entry key="LINEB*" value-ref="delimitedLineTokenizer" />
            </map>
        </property>
        <property name="fieldSetMappers">
            <map>
                <entry key="LINEA*" value-ref="passThroughFieldSetMapper" />
                <entry key="LINEB*" value-ref="passThroughFieldSetMapper" />
            </map>
        </property>
    </bean>

    <bean id="delimitedLineTokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer" />
    
    <bean id="passThroughFieldSetMapper" class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />    
    
    <bean id="itemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
        <property name="resource" value="#{jobParameters['output.file']}" />
        <property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.PassThroughLineAggregator"/>
        </property>
    </bean>
</beans>
