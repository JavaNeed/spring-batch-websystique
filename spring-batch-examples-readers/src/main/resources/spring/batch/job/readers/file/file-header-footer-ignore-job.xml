<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <description>
        Example for a job which reads a file with header and footer line(s) and ignores them.
        
        Solution consists of 2 parts:
            1. ignore the header line with linesToSkip property
            2. ignore the footer line with an ItemProcessor which checks for the footer line
               and filters it 
               
        Inspiration from http://forum.springsource.org/showthread.php?120099-Any-way-to-skip-the-first-and-last-line-of-the-input-file-when-reading-a-txt-file
    </description>
    <!-- 
        inline xmlns, otherwise it would look like 'batch:job, batch:step, etc.' 
    -->
    <job id="headerIgnoreFlatFileReaderJob" xmlns="http://www.springframework.org/schema/batch">
        <step id="headerIgnoreFlatFileReaderStep">
            <tasklet>
                <chunk reader="itemReader" processor="itemProcessor" writer="itemWriter" commit-interval="5" />
            </tasklet>
        </step>
    </job>

    <bean id="itemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="resource" value="#{jobParameters['input.file']}" />
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.PassThroughLineMapper" />
        </property>
        <property name="linesToSkip" value="1" />        
        <property name="strict" value="true" />
    </bean>

    <bean id="itemProcessor" class="de.langmi.spring.batch.examples.readers.file.footer.SkipFooterLineItemProcessor" />
    
    <bean id="itemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
        <property name="resource" value="#{jobParameters['output.file']}" />
        <property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.PassThroughLineAggregator"/>
        </property>
    </bean>
</beans>
