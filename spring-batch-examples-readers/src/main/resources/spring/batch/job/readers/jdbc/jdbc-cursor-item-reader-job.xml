<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <description>
        Example using the JdbcPagingItemReader.
        
            * HSQLDB
            * reads from table
            * writes results to file
            
            needed table create statement (is HSQLDB specific)
                CREATE TABLE TEST (ID INTEGER GENERATED BY DEFAULT AS IDENTITY, NAME VARCHAR (100))                
    </description>
        
    <!-- 
        inline xmlns, otherwise it would look like 'batch:job, batch:step, etc.' 
    -->
    <job id="jdbcCursorItemReaderJob" xmlns="http://www.springframework.org/schema/batch">
        <step id="jdbcCursorItemReaderStep">
            <tasklet>
                <chunk reader="itemReader" writer="itemWriter" commit-interval="5" />
            </tasklet>
        </step>
    </job>

	
    <bean id="itemReader" class="org.springframework.batch.item.database.JdbcCursorItemReader">
        <property name="dataSource" ref="dataSource" />
        <property name="sql">
            <value>
                <![CDATA[
                    SELECT ID,NAME
                    FROM TEST
                    WHERE NAME <> 'foo'
                ]]>
            </value>
        </property>
        <property name="rowMapper" ref="rowMapper" />
    </bean>
    
    <bean id="rowMapper" class="de.langmi.spring.batch.examples.readers.jdbc.StringRowMapper" />
    
    <bean id="itemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
        <property name="resource" value="#{jobParameters['output.file']}" />
        <property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                <property name="fieldExtractor">
                    <bean class="org.springframework.batch.item.file.transform.PassThroughFieldExtractor" />
                </property>
            </bean>
        </property>
    </bean>

</beans>
