<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <description>
        Example using the JdbcPagingItemReader for reading from database
        without the need for selfmade transferobjects and/or mappings.
        
            * HSQLDB
            * reads from table
                * uses ColumnMap ColumnRowMapper from spring-jdbc to prevent
                  implementation of TransferObjectClass and/or custom rowmapper
            * writes results to file, again without mapping/transferobject
            
            needed table create statement (is HSQLDB specific)
                CREATE TABLE TEST (ID INTEGER GENERATED BY DEFAULT AS IDENTITY, NAME VARCHAR (100))                
    </description>
        
    <!-- 
        inline xmlns, otherwise it would look like 'batch:job, batch:step, etc.' 
    -->
    <job id="jdbcPagingItemReaderGenericJob" xmlns="http://www.springframework.org/schema/batch">
        <step id="jdbcPagingItemReaderGenericStep">
            <tasklet>
                <chunk reader="itemReader" writer="itemWriter" commit-interval="5" />
            </tasklet>
        </step>
    </job>

    <bean id="itemReader" class="org.springframework.batch.item.database.JdbcPagingItemReader">
        <property name="dataSource" ref="dataSource" />
        <property name="queryProvider">
            <bean class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
                <property name="dataSource" ref="dataSource" />
                <property name="databaseType" value="HSQL" />
                <property name="selectClause" value="select ID, NAME" />
                <property name="fromClause" value="from TEST" /> 
                <property name="whereClause">
                    <value>
                        <![CDATA[
                            where NAME <> 'foo'
                        ]]>
                    </value>
                </property>
                <property name="sortKey" value="ID" />
            </bean>
        </property>
        <property name="pageSize" value="2" />
        <property name="rowMapper">
            <bean class="org.springframework.jdbc.core.ColumnMapRowMapper" />
        </property>
    </bean>
    
    
    <bean id="itemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
        <property name="resource" value="#{jobParameters['output.file']}" />
        <property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                <property name="fieldExtractor">
                    <bean class="org.springframework.batch.item.file.transform.PassThroughFieldExtractor" />
                </property>
            </bean>
        </property>
    </bean>

</beans>
