<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <description>
        Example for a job which reads TAR, ZIP, JAR, EAR, WAR files.
        
        - uses a customized MultiResourceItemReader for compressed archives
            - extracts the files from the archive
            - if archive contains nested directories it will extract all
              files recursively
            - extracted files are handled as ItemStreams
        - writes all lines from all files into one file

    </description>
    <!-- 
        inline xmlns, otherwise it would look like 'batch:job, batch:step, etc.' 
    -->
    <job id="archiveFlatFileReaderJob" xmlns="http://www.springframework.org/schema/batch">
        <step id="archiveFlatFileReaderStep">
            <tasklet>
                <chunk reader="itemReader" writer="itemWriter" commit-interval="5"></chunk>
            </tasklet>
        </step>
    </job>

    <bean id="itemReader"  class="de.langmi.spring.batch.examples.readers.file.archive.ArchiveMultiResourceItemReader" scope="step">
        <property name="archives" value="#{jobParameters['input.archives']}" />
        <property name="delegate" ref="delegateReader" />
        <property name="strict" value="true" />
    </bean>


    <bean id="delegateReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.PassThroughLineMapper" />
        </property>
    </bean>
    
    <bean id="itemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
        <property name="resource" value="#{jobParameters['output.file']}" />
        <property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.PassThroughLineAggregator"/>
        </property>
    </bean>

</beans>
