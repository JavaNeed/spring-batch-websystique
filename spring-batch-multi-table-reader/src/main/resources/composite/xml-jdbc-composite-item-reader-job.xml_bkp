<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">

	<import resource="classpath:context-datasource.xml" />
	
	<!-- JobRepository and JobLauncher are configuration/setup classes -->
	<bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean" />

	<bean id="jobLauncher" 	class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>
	
	
	<!-- Step will need a transaction manager -->
	<bean id="transactionManager"
		class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />


	<!-- =========================================================== -->	
	<job id="compositeJdbcReaderJob" xmlns="http://www.springframework.org/schema/batch">
        <step id="compositeJdbcReaderStep" next="compositeJdbcReaderStep2">
            <tasklet>
                <chunk reader="compositeItemReader" writer="itemWriter" commit-interval="5" />
            </tasklet>
        </step>
        
        <step id="compositeJdbcReaderStep2">
            <tasklet>
                <chunk reader="compositeItemReader2" writer="itemWriter2" commit-interval="5" />
            </tasklet>
        </step>
    </job>


	<!-- ============= Composite Item Reader ================ -->
    <bean id="compositeItemReader" class="com.common.batch.reader.CompositeCursorItemReader">
        <property name="unifyingMapper">
            <bean class="com.common.batch.mapper.DefaultUnifyingStringItemsMapper" />
        </property>
        <property name="cursorItemReaders">
            <list>
                <ref bean="itemReader1" />
            </list>
        </property>
    </bean>
    
    <bean id="compositeItemReader2" class="com.common.batch.reader.CompositeCursorItemReader">
        <property name="unifyingMapper">
            <bean class="com.common.batch.mapper.DefaultUnifyingStringItemsMapper" />
        </property>
        <property name="cursorItemReaders">
            <list>
                <ref bean="itemReader2" />                 
            </list>
        </property>
    </bean>
    

	<!-- ========== ItemReader =============== -->
    <bean id="itemReader1" class="org.springframework.batch.item.database.JdbcCursorItemReader">
        <property name="dataSource" ref="dataSource" />
       
        <property name="saveState" value="true" />
        
        <property name="sql">
            <value>
                <![CDATA[ ${select.sql.customers} ]]>
            </value>
        </property>
   		<property name="rowMapper">
			<bean class="com.common.batch.mapper.CustomerMapper" />
		</property>
    </bean>


    <bean id="itemReader2" class="org.springframework.batch.item.database.JdbcCursorItemReader">
        <property name="dataSource" ref="dataSource" />
       
        <property name="saveState" value="true" />
       
        <property name="sql">
            <value>
                <![CDATA[ ${select.sql.employees} ]]>
            </value>
        </property>
        <property name="rowMapper">
			<bean class="com.common.batch.mapper.EmployeeMapper" />
		</property>
    </bean>
    
    
    <!-- ItemWritter -->
	<bean id="itemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<property name="resource" value="file:xml/customers.xml" />
	
		<property name="marshaller" ref="customerUnmarshaller" />
	
		<property name="rootTagName" value="customers" />
	</bean>
	
	<bean id="itemWriter2" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<property name="resource" value="file:xml/customers.xml" />
	
		<property name="marshaller" ref="employeeUnmarshaller" />
	
		<property name="rootTagName" value="employees" />
	</bean>
	
	<!-- ======= Employee Unmarshaller ======== -->
	<bean id="employeeUnmarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
		<property name="aliases">
			<util:map id="aliases">
				<entry key="employee" value="com.common.batch.model.Employee" />
			</util:map>
		</property>
	</bean>
	
		<!-- ======= Customer Unmarshaller ======== -->
	<bean id="customerUnmarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
		<property name="aliases">
			<util:map id="aliases">
				<entry key="customer" value="com.common.batch.model.Customer" />
			</util:map>
		</property>
	</bean>
	
	
	<bean id="itemCustomerProcessor" class="com.common.batch.processor.CustomerProcessor" />
	<bean id="itemEmployeeProcessor" class="com.common.batch.processor.EmployeeProcessor" />
	
	
	<job id="testActualJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="step1" next="step2">
			<tasklet transaction-manager="transactionManager">
				<chunk reader="compositeItemReader" writer="itemWriter" processor="itemCustomerProcessor" commit-interval="1" />
			</tasklet>
		</step>
		
		<step id="step2">
			<tasklet transaction-manager="transactionManager">
				<chunk reader="compositeItemReader" writer="itemWriter2" processor="itemEmployeeProcessor" commit-interval="1" />
			</tasklet>
		</step>
	</job>

</beans>